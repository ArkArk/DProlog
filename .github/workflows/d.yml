name: D

on:
  push:
  pull_request:

jobs:
  test:
    name: Tests with DMD and LDC
    strategy:
      matrix:
        compiler:
          - dmd-latest
          - ldc-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install linenoise
        run: |-
          git clone https://github.com/antirez/linenoise.git \
            && cd linenoise \
            && gcc -c -o linenoise.o linenoise.c \
            && ar rcs liblinenoise.a linenoise.o \
            && cd -
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.compiler }}
      - name: Run tests
        run: dub -q test

  codecov:
    name: Code coverage
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v2
      - name: Install linenoise
        run: |-
          git clone https://github.com/antirez/linenoise.git \
            && cd linenoise \
            && gcc -c -o linenoise.o linenoise.c \
            && ar rcs liblinenoise.a linenoise.o \
            && cd -
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: dmd-latest
      - name: Generate code coverage report
        run: dub -q test --build=unittest-cov
      - name: Upload reports
        run: bash <(curl -s https://codecov.io/bash) -s "src-*.lst"
